""""" General functioning
set nocompatible  " don't try to be vi compatible
nnoremap <SPACE> <Nop>
let mapleader=" "  " pick a leader key

" fast saving: <leader>w
nmap <leader>w :w!<cr>
command W w !sudo tee % > /dev/null  " :W sudo saves the file

" remap Caps lock to Escape just within Vim
au VimEnter * silent! !xmodmap -e 'clear Lock' -e 'keycode 0x42 = Escape'
au VimLeave * silent! !xmodmap -e 'clear Lock' -e 'keycode 0x42 = Caps_Lock'

set history=500  " how many lines of history Vim remembers
set modelines=0  " turn off modelines for security reasons
set encoding=utf-8  " set encoding
set autoread  " update when a file is changed from the outside
set hidden  " current buffer can be put into background
set ttyfast  " faster rendering
set clipboard=unnamedplus  " use system clipboard for yank commands

" no visual or audio error bells
set noerrorbells  " no audio bells
set visualbell  " blink cursor on error instead of beeping
set t_vb=  " set visual bell to nothing
set tm=500

if has('mouse')
    set mouse=a
endif

" cursor motion
set scrolloff=3  " minimum number of lines to keep above and below cursor
set backspace=indent,eol,start  " allow backspace over special characters
set matchpairs+=<:>  " use % to jump between pairs

" move up/down editor lines
nnoremap j gj
nnoremap k gk

" searching
set ignorecase  " case insensitive searching
set smartcase  " case-sensitive if expression contains a capital letter
set hlsearch  " highlight search results
set incsearch  " incremental search as you type
set showmatch  " show matching braces/parentheses
set matchtime=3  " how long matching brackets are shown
set magic  " use regex in search
map <leader>n :let @/=''<cr>  " clear search


""""" Appearance
syntax on  " turn on syntax highlighting
set number  " show line numbers
set ruler  " show file stats
set laststatus=2  " show status bar all the time
set showmode  " show which mode you are currently in
set showcmd  " show incomplete commands

" whitespace
set wrap  " turn on line wrapping
set wrapmargin=8  " wrap lines when coming within n characters from side
set textwidth=79  " maximum width of line before wrapping
set linebreak  " set soft wrapping
set showbreak=…  " show ellipsis at wrapping line break
set autoindent  " automatically set indent of new line
set formatoptions=tcqrn1  " set some formatting options (see documentation for details)
set smarttab  " tab respects 'tabstop', 'shiftwidth', and 'softtabstop'
set tabstop=4  " the visible width of tabs
set softtabstop=4  " edit as if the tabs are 4 characters wide
set shiftwidth=4  " number of spaces to use for indent and unindent
set shiftround  " round indent to a multiple of shiftwidth
set expandtab  " convert tabs to spaces

" visualize tabs and newlines
set list
set listchars=tab:→\ ,eol:¬,trail:⋅,extends:❯,precedes:❮
set showbreak=↪

" code folding settings
set foldmethod=syntax  " fold based on indent
set foldlevelstart=99  " start with no code folded
set foldnestmax=10  " depest fold is 10 levels
set nofoldenable  " don't fold by default
set foldlevel=1


" colours, etc.
set t_Co=256  " explicitly tell Vim that the terminal supports 256 colors

if &term =~ '256color'
    " disable background color erase
    set t_ut=
endif

" enable 24 bit color support if supported
if (has("termguicolors"))
    if (!(has("nvim")))
        let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
        let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
    endif
    set termguicolors
endif

match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'  " highlight conflicts

" other key mappings
nnoremap <C-H> <C-W><C-H>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>

" vim-plug plugin management
call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'jiangmiao/auto-pairs'

call plug#end()

" plugin settings
nnoremap <leader>f :NERDTreeToggle<cr>
vnoremap <leader>f :NERDTreeToggle<cr>
let NERDTreeShowHidden=1

